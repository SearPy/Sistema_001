/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.app.Compras;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.Modelos.Producto;
import net.dao.Producto_daoimpl;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.export.Exporter;
import net.sf.jasperreports.export.SimpleExporterInput;
import net.sf.jasperreports.export.SimpleOutputStreamExporterOutput;
import net.sf.jasperreports.view.JasperViewer;
import net.util.HibernateUtil;
import org.hibernate.Session;

/**
 *
 * @author RAMC
 */
public class ProductosApp extends javax.swing.JDialog {

    /**
     * Creates new form ProductosApp
     */
    public ProductosApp(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        arranque();
        setLocationRelativeTo(null);
    }
    
    Session st = HibernateUtil.getSessionFactory().openSession();
    private final Producto_daoimpl dao = new Producto_daoimpl(st);
    private DefaultTableModel model;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Informe = new javax.swing.JDialog();
        comboinfo = new javax.swing.JComboBox<>();
        imprimir = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        comboinfo2 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtdescripcion = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtprecio = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        combotipo = new javax.swing.JComboBox<>();
        comboiva = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        nuevo = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        editar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        salir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();
        informe = new javax.swing.JButton();

        Informe.setMinimumSize(new java.awt.Dimension(620, 160));

        comboinfo.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        comboinfo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Producto", "Insumo" }));

        imprimir.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        imprimir.setText("Imprimir");
        imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel4.setText("Tipo");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel5.setText("IVA");

        comboinfo2.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        comboinfo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "10%", "5%" }));

        javax.swing.GroupLayout InformeLayout = new javax.swing.GroupLayout(Informe.getContentPane());
        Informe.getContentPane().setLayout(InformeLayout);
        InformeLayout.setHorizontalGroup(
            InformeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InformeLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboinfo2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(imprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        InformeLayout.setVerticalGroup(
            InformeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InformeLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(InformeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(InformeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(comboinfo2))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 650));
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        setResizable(false);

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Mantener Registro de Productos");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(250, 20, 310, 40);

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel2.setForeground(new java.awt.Color(102, 102, 102));
        jPanel2.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel2.setText("ID");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(30, 20, 30, 30);

        txtid.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });
        jPanel2.add(txtid);
        txtid.setBounds(60, 20, 40, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel3.setText("DESCRIPCION");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(120, 20, 90, 30);

        txtdescripcion.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jPanel2.add(txtdescripcion);
        txtdescripcion.setBounds(210, 20, 300, 30);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel8.setText("tipo");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(30, 80, 120, 30);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel9.setText("Precio");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(220, 80, 100, 30);

        txtprecio.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        txtprecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtprecioActionPerformed(evt);
            }
        });
        jPanel2.add(txtprecio);
        txtprecio.setBounds(300, 80, 150, 30);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel10.setText("IVA");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(520, 80, 60, 20);

        combotipo.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        combotipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Producto", "Insumo" }));
        jPanel2.add(combotipo);
        combotipo.setBounds(80, 80, 120, 30);

        comboiva.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        comboiva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10%", "5%", "0" }));
        jPanel2.add(comboiva);
        comboiva.setBounds(570, 80, 70, 30);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(10, 90, 870, 140);

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel3.setForeground(new java.awt.Color(102, 102, 102));

        nuevo.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        nuevo.setText("NUEVO");
        nuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nuevoMouseClicked(evt);
            }
        });

        guardar.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        guardar.setText("GUARDAR");
        guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardarMouseClicked(evt);
            }
        });

        editar.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        editar.setText("EDITAR");
        editar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editarMouseClicked(evt);
            }
        });

        eliminar.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        eliminar.setText("ELIMINAR");
        eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eliminarMouseClicked(evt);
            }
        });

        cancelar.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        cancelar.setText("CANCELAR");
        cancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelarMouseClicked(evt);
            }
        });

        salir.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        salir.setText("SALIR");
        salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119)
                .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(salir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(10, 240, 870, 70);

        tab.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "DESCRIPCION", "PRECIO", "TIPO", "IVA"
            }
        ));
        tab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tab);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 320, 870, 210);

        informe.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        informe.setText("Informe");
        informe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                informeActionPerformed(evt);
            }
        });
        jPanel1.add(informe);
        informe.setBounds(10, 550, 90, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidActionPerformed

    private void nuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nuevoMouseClicked
        nuevo();
    }//GEN-LAST:event_nuevoMouseClicked

    private void guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarMouseClicked
        guardar();
    }//GEN-LAST:event_guardarMouseClicked

    private void editarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editarMouseClicked
        editar();
    }//GEN-LAST:event_editarMouseClicked

    private void eliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarMouseClicked
        eliminar();
    }//GEN-LAST:event_eliminarMouseClicked

    private void cancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarMouseClicked
        arranque();
    }//GEN-LAST:event_cancelarMouseClicked

    private void salirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salirMouseClicked
        dispose();
    }//GEN-LAST:event_salirMouseClicked

    private void tabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabMouseClicked
        selecTable();
    }//GEN-LAST:event_tabMouseClicked

    private void txtprecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtprecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprecioActionPerformed

    private void informeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_informeActionPerformed
        informe();// TODO add your handling code here:
    }//GEN-LAST:event_informeActionPerformed

    private void imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirActionPerformed
        try {
            imprimir(); // TODO add your handling code here:
        } catch (JRException ex) {
            Logger.getLogger(ProductosApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_imprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductosApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductosApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductosApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductosApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ProductosApp dialog = new ProductosApp(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Informe;
    private javax.swing.JButton cancelar;
    private javax.swing.JComboBox<String> comboinfo;
    private javax.swing.JComboBox<String> comboinfo2;
    private javax.swing.JComboBox<String> comboiva;
    private javax.swing.JComboBox<String> combotipo;
    private javax.swing.JButton editar;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton guardar;
    private javax.swing.JButton imprimir;
    private javax.swing.JButton informe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nuevo;
    private javax.swing.JButton salir;
    private javax.swing.JTable tab;
    private javax.swing.JTextField txtdescripcion;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtprecio;
    // End of variables declaration//GEN-END:variables
   
    
    private void arranque(){
    //campos
    txtid.setEnabled(false);
    txtid.setText(null);
    txtdescripcion.setEnabled(false);
    txtdescripcion.setText(null);
    combotipo.setEnabled(false);
    combotipo.setSelectedIndex(-1);
    comboiva.setSelectedIndex(-1);
    comboiva.setEnabled(false);
    txtprecio.setText(null);
    txtprecio.setEnabled(false);
    //botones
    nuevo.setEnabled(true);
    guardar.setEnabled(false);
    guardar.setText("Guardar");
    editar.setEnabled(false);
    eliminar.setEnabled(false);
    tableModel();
    tab.setEnabled(true);
    }
    
    private void tableModel(){
        tab.getColumnModel().getColumn(0).setPreferredWidth(80);
        tab.getColumnModel().getColumn(1).setPreferredWidth(180);
        tab.getColumnModel().getColumn(2).setPreferredWidth(180);
        tab.getColumnModel().getColumn(3).setPreferredWidth(180);
        tab.getColumnModel().getColumn(4).setPreferredWidth(180);
        model = (DefaultTableModel)tab.getModel();
        model.setNumRows(0);
        List<Producto> list = dao.list();
        for (Producto l : list){
            model.addRow(new Object[]{
                l.getId_prod(), l.getDescripcion(), l.getPrecio(), l.getTipo(), l.getIva()
            });
        }
    }
    
    private void nuevo(){
     //campos
    txtdescripcion.setEnabled(true);
    txtdescripcion.setText(null);
    tab.setEnabled(false);
    combotipo.setEnabled(true);
    txtprecio.setText(null);
    txtprecio.setEnabled(true);
    comboiva.setEnabled(true);
    //botones
    nuevo.setEnabled(false);
    guardar.setEnabled(true);
    guardar.setText("Guardar");
    editar.setEnabled(false);
    eliminar.setEnabled(false);
    }
    String tipo =null;
    String iva =null;
    private void guardar(){
        
        if(!txtdescripcion.getText().isEmpty() && !txtprecio.getText().isEmpty() && combotipo.getSelectedIndex()>-1 && comboiva.getSelectedIndex()>-1){
            
            if(guardar.getText().equals("Guardar")){
                Producto p = new Producto(txtdescripcion.getText(),combotipo.getSelectedItem().toString()
                        ,Integer.parseInt(txtprecio.getText()),comboiva.getSelectedItem().toString(),0);
                dao.guardar(p);
                JOptionPane.showMessageDialog(null, "Registro guardado correctamente");
                arranque();
            }else{
                Producto p = dao.buscarPorId(Integer.parseInt(txtid.getText()));
                p.setDescripcion(txtdescripcion.getText());
                p.setTipo(combotipo.getSelectedItem().toString());
                p.setPrecio(Integer.parseInt(txtprecio.getText()));
                p.setIva(comboiva.getSelectedItem().toString());
                dao.actualizar(p);
                JOptionPane.showMessageDialog(null, "Registro actualizado correctamente");
                arranque();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Campo vacio");
        }
    }
    
    private void selecTable(){
        if(tab.getRowCount()> 0){
            if(tab.isEnabled()){
                if(tab.getSelectedRow()> -1){
                   Producto p = dao.buscarPorId(Integer.parseInt(model.getValueAt(tab.getSelectedRow(),0).toString()));
                   txtid.setText(String.valueOf(p.getId_prod()));
                   txtdescripcion.setText(p.getDescripcion());
                   combotipo.setSelectedItem(p.getTipo());
                   txtprecio.setText(String.valueOf(p.getPrecio()));
                   comboiva.setSelectedItem(p.getIva());
                   editar.setEnabled(true);
                   eliminar.setEnabled(true);
                   nuevo.setEnabled(false);
                }
            }
        }
    }
    
    private void editar(){
         txtdescripcion.setEnabled(true);
         combotipo.setEnabled(true);
         txtprecio.setEnabled(true);
         comboiva.setEnabled(true);
         
         nuevo.setEnabled(false);
         guardar.setText("Actualizar");
         guardar.setEnabled(true);
         editar.setEnabled(false);
         eliminar.setEnabled(false);
    }
    
    private void eliminar(){
        if(JOptionPane.showConfirmDialog(null, "Desea Eliminar el registro","Mensaje del Sistema..",JOptionPane.YES_NO_OPTION )==0){
            dao.eliminar(Integer.parseInt(txtid.getText().toString()));
            JOptionPane.showMessageDialog(null, "Registo Eliminado");
            arranque();
        }else{
            JOptionPane.showMessageDialog(null, "Eliminacion cancelada");
        }
    }
    
    private void informe(){
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;
        Informe.setModal(true);
        Informe.setLocation(x,y);
        Informe.setLocationRelativeTo(null);
        Informe.setVisible(true);
    }
    
    private void imprimir() throws JRException{
        LinkedList<Producto> info = new LinkedList();
        List<Producto> list = dao.list();
        for (Producto l : list){
            
            if(comboinfo.getSelectedItem().equals("Todos") && comboinfo2.getSelectedItem().equals("Todos")){
                info.add(l);
            }else{
                if(l.getTipo().equals(comboinfo.getSelectedItem().toString()) && comboinfo2.getSelectedItem().equals("Todos")){
                    info.add(l);
                }else{
                    if(l.getTipo().equals(comboinfo.getSelectedItem().toString()) && l.getIva().equals(comboinfo2.getSelectedItem().toString())){
                        info.add(l);
                    }else{
                        if(comboinfo.getSelectedItem().equals("Todos") && l.getIva().equals(comboinfo2.getSelectedItem().toString())){
                            info.add(l);
                        }
                    }
                }
            }
            
        }
         try {
            JasperReport reportes = (JasperReport) JRLoader.loadObject(new File ("src/Reportes/Productos.jasper"));

            JasperPrint jasperPrint = JasperFillManager.fillReport(reportes, null, new JRBeanCollectionDataSource(info));
            
            JasperViewer jviewer = new JasperViewer(jasperPrint,false);
                    jviewer.setVisible(true);
                    

//            Exporter exporter = new JRPdfExporter();
//
//            exporter.setExporterInput(new SimpleExporterInput(jasperPrint));
//
//            exporter.setExporterOutput(new SimpleOutputStreamExporterOutput("ListaPorductos.pdf"));
//
//            exporter.exportReport(); 
         }
         catch(JRException e)
         {
             JOptionPane.showMessageDialog(null, "Error cargando reporte."+e);
         }
        
         Informe.dispose();
        
    }
    
}
