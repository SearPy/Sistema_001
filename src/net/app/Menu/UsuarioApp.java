/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.app.Menu;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.Modelos.Usuario;
import net.dao.UsuarioDaoImpl;
import net.util.HibernateUtil;
import org.hibernate.Session;

/**
 *
 * @author RAMC
 */
public class UsuarioApp extends javax.swing.JDialog {

    /**
     * Creates new form Libros
     */
    public UsuarioApp(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        arranque();
        setLocationRelativeTo(null);
    }
    Session st = HibernateUtil.getSessionFactory().openSession();
    private final UsuarioDaoImpl udao = new UsuarioDaoImpl(st);
    private DefaultTableModel model;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        combo = new javax.swing.JComboBox<>();
        txtpass = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        txtpass2 = new javax.swing.JPasswordField();
        jPanel3 = new javax.swing.JPanel();
        nuevo = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        editar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        salir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(750, 650));
        setModal(true);

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Mantener Registro de Usuarios");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(250, 20, 270, 40);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel2.setForeground(new java.awt.Color(102, 102, 102));
        jPanel2.setLayout(null);

        jLabel2.setText("ID");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(30, 20, 20, 14);

        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });
        jPanel2.add(txtid);
        txtid.setBounds(60, 20, 40, 30);

        jLabel3.setText("NOBMRE");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(120, 20, 70, 30);
        jPanel2.add(txtnombre);
        txtnombre.setBounds(210, 20, 300, 30);

        jLabel4.setText("CONTRASEÃ‘A");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(520, 20, 90, 30);

        jLabel5.setText("PERFIL");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(30, 80, 60, 14);

        combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Compra", "Servicio" }));
        combo.setToolTipText("");
        combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionPerformed(evt);
            }
        });
        jPanel2.add(combo);
        combo.setBounds(130, 80, 170, 40);

        txtpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpassActionPerformed(evt);
            }
        });
        jPanel2.add(txtpass);
        txtpass.setBounds(630, 20, 160, 30);

        jLabel7.setText("CONFIRMAR");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(520, 70, 90, 30);

        txtpass2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpass2ActionPerformed(evt);
            }
        });
        jPanel2.add(txtpass2);
        txtpass2.setBounds(630, 80, 160, 30);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(10, 90, 870, 200);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel3.setForeground(new java.awt.Color(102, 102, 102));

        nuevo.setText("NUEVO");
        nuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nuevoMouseClicked(evt);
            }
        });

        guardar.setText("GUARDAR");
        guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardarMouseClicked(evt);
            }
        });

        editar.setText("EDITAR");
        editar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editarMouseClicked(evt);
            }
        });

        eliminar.setText("ELIMINAR");
        eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eliminarMouseClicked(evt);
            }
        });

        cancelar.setText("CANCELAR");
        cancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelarMouseClicked(evt);
            }
        });

        salir.setText("SALIR");
        salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119)
                .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(130, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(salir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(10, 300, 870, 70);

        tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "NOMBRE", "ROLL"
            }
        ));
        tab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tab);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 380, 870, 130);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 888, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidActionPerformed

    private void nuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nuevoMouseClicked
        nuevo();
    }//GEN-LAST:event_nuevoMouseClicked

    private void cancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarMouseClicked
        arranque();
    }//GEN-LAST:event_cancelarMouseClicked

    private void salirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salirMouseClicked
        dispose();
    }//GEN-LAST:event_salirMouseClicked

    private void guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarMouseClicked
        guardar();
    }//GEN-LAST:event_guardarMouseClicked

    private void tabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabMouseClicked
        selecTable();
    }//GEN-LAST:event_tabMouseClicked

    private void editarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editarMouseClicked
        editar();
    }//GEN-LAST:event_editarMouseClicked

    private void eliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarMouseClicked
        eliminar();
    }//GEN-LAST:event_eliminarMouseClicked

    private void txtpassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpassActionPerformed

    private void comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboActionPerformed

    private void txtpass2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpass2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpass2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsuarioApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsuarioApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsuarioApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsuarioApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UsuarioApp dialog = new UsuarioApp(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelar;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JButton editar;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nuevo;
    private javax.swing.JButton salir;
    private javax.swing.JTable tab;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JPasswordField txtpass;
    private javax.swing.JPasswordField txtpass2;
    // End of variables declaration//GEN-END:variables

    private void arranque(){
    //campos
    txtid.setEnabled(false);
    txtid.setText(null);
    txtnombre.setEnabled(false);
    txtnombre.setText(null);
    tab.setEnabled(true);
    txtpass.setText(null);
    txtpass.setEnabled(false);
    txtpass2.setText(null);
    txtpass2.setEnabled(false);
    combo.setEnabled(false);
    combo.setSelectedIndex(-1);
    //botones
    nuevo.setEnabled(true);
    guardar.setEnabled(false);
    guardar.setText("Guardar");
    editar.setEnabled(false);
    eliminar.setEnabled(false);
    tableModel();
    tab.setEnabled(true);
    }
    
    private void tableModel(){
        tab.getColumnModel().getColumn(0).setPreferredWidth(80);
        tab.getColumnModel().getColumn(1).setPreferredWidth(180);
        model = (DefaultTableModel)tab.getModel();
        model.setNumRows(0);
        List<Usuario> list = udao.list();
        for (Usuario l : list){
            if(!l.getNombre().equals("admin")){
                model.addRow(new Object[]{
                    l.getId(), l.getNombre(),l.getRol()
                });
           }
        }
    }
    
    
    private void nuevo(){
     //campos
    txtnombre.setEnabled(true);
    txtnombre.setText(null);
    tab.setEnabled(false);
    txtpass.setText(null);
    txtpass.setEnabled(true);
    txtpass2.setText(null);
    txtpass2.setEnabled(true);
    //botones
    nuevo.setEnabled(false);
    guardar.setEnabled(true);
    guardar.setText("Guardar");
    editar.setEnabled(false);
    eliminar.setEnabled(false);
    combo.setSelectedIndex(-1);
    combo.setEnabled(true);
    }
    
    public static String cifradoCesar(String texto, int codigo) {
        StringBuilder cifrado = new StringBuilder();
        codigo = 4 % 26;
        for (int i = 0; i < texto.length(); i++) {
            if (texto.charAt(i) >= 'a' && texto.charAt(i) <= 'z') {
                if ((texto.charAt(i) + codigo) > 'z') {
                    cifrado.append((char) (texto.charAt(i) + codigo - 26));
                } else {
                    cifrado.append((char) (texto.charAt(i) + codigo));
                }
            } else if (texto.charAt(i) >= 'A' && texto.charAt(i) <= 'Z') {
                if ((texto.charAt(i) + codigo) > 'Z') {
                    cifrado.append((char) (texto.charAt(i) + codigo - 26));
                } else {
                    cifrado.append((char) (texto.charAt(i) + codigo));
                }
            }
        }
        return cifrado.toString();
    }
    
    private void guardar(){
        Usuario us=udao.buscarPorNom(txtnombre.getText());
        if(us == null){
          us = udao.buscarPorId(1);  
        }
        if(!txtnombre.getText().isEmpty() && !txtpass.getText().isEmpty()  && combo.getSelectedIndex()>-1 ){
            if(!us.getNombre().equals(txtnombre.getText())){   
                if(!txtpass2.getText().isEmpty()){
                    if(txtpass2.getText().equals(txtpass.getText())){
                       if(guardar.getText().equals("Guardar")){
                            Usuario l = new Usuario(txtnombre.getText(),cifradoCesar(txtpass.getText(),4),
                             combo.getSelectedItem().toString());
                            udao.guardar(l);
                            JOptionPane.showMessageDialog(null, "Registro guardado correctamente");
                            arranque();
                        }else{
                            Usuario l = udao.buscarPorId(Integer.parseInt(txtid.getText()));
                            l.setNombre(txtnombre.getText());
                            l.setPass(txtpass.getText());
                            l.setRol(combo.getSelectedItem().toString());
                            udao.actualizar(l);
                            JOptionPane.showMessageDialog(null, "Registro actualizado correctamente");
                            arranque();
                        } 
                    }else{
                       JOptionPane.showMessageDialog(null, "Las claves no coinciden");  
                    }
                }else{
                   JOptionPane.showMessageDialog(null, "Confirme la contraseÃ±a"); 
                }
            }else{
                    JOptionPane.showMessageDialog(null, "Nombre de usuario ya existe");
                    }
        }else{
            JOptionPane.showMessageDialog(null, "Campo vacio");
        }
    }
     
    
    private void selecTable(){
        if(tab.getRowCount()> 0){
            if(tab.isEnabled()){
                if(tab.getSelectedRow()> -1){
                   Usuario l = udao.buscarPorId(Integer.parseInt(model.getValueAt(tab.getSelectedRow(),0).toString()));
                   txtid.setText(String.valueOf(l.getId()));
                   txtnombre.setText(l.getNombre());
                   txtpass.setText(l.getPass());
                   combo.setSelectedItem((l.getRol()));               
                   editar.setEnabled(true);
                   eliminar.setEnabled(true);
                   nuevo.setEnabled(false);
                }
            }
        }
    }
    
    private void editar(){
         txtnombre.setEnabled(true);
         txtpass.setEnabled(true);
         txtpass2.setEnabled(true);
         combo.setEnabled(true);
         nuevo.setEnabled(false);
         guardar.setText("Actualizar");
         guardar.setEnabled(true);
         editar.setEnabled(false);
         eliminar.setEnabled(false);
    }
     
    private void eliminar(){
        if(JOptionPane.showConfirmDialog(null, "Desea Eliminar el registro","Mensaje del Sistema..",JOptionPane.YES_NO_OPTION )==0){
            udao.eliminar(Integer.parseInt(txtid.getText().toString()));
            JOptionPane.showMessageDialog(null, "Registo Eliminado");
            arranque();
        }else{
            JOptionPane.showMessageDialog(null, "Eliminacion cancelada");
        }
    }
    
}
